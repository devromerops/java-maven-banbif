name: Maven build 

on:
  push:
    branches:
      - main
      - feature/**
    paths:
      - .github/workflows/maven-build.yml
      - src/**
      - pom.xml
      - Dockerfile
  pull_request: 
    branches:
      - main
      - feature/**
    paths:
      - .github/workflows/maven-build.yml
      - src/**
      - pom.xml
      - Dockerfile

env:
  IMAGE_NAME: xxsumsxx/java-maven-banbif
  IMAGE_TAG: 1.1

jobs:
  create_cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

  maven_test:
    runs-on: ubuntu-latest
    needs: create_cache
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
      - name: Set up Gitleaks
        uses: zricethezav/gitleaks-action@v2  
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          args: --verbose --source .
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Build with Maven
        run: mvn clean verify
      - name: SonarQube Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
            mvn sonar:sonar -Pcoverage -Dsonar.projectKey=xxsumsxx_${{ github.event.repository.name }} \
            -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=sums -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.coverage.jacoco.xmlReportPaths=

  build_image:
    runs-on: ubuntu-latest
    needs: maven_test
    services:
      docker:
        image: docker:24-dind
        options: --privileged
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASS }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USER }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - name: Build Docker image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
      - name: Push Docker image
        run: docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
